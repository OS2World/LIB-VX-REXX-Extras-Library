
/*
 * This file was generated by the SOM Compiler.
 * FileName: tabdlg.ih.
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emitih: 1.59
 */

#ifndef tabdlg_ih
#define tabdlg_ih


#include "tabdlg.h"

/*
 * Set the scope of methods functions
 */
#ifndef SOM_Scope
#ifdef __cplusplus
#define SOM_Scope extern "C"
#else
#define SOM_Scope extern
#endif
#endif

/*
 * Passthru lines: File: "C.ih", "after"
 */

#include "vxrexx.h"


#ifndef SOM_CurrentClass
#define SOM_CurrentClass VRTabbedDialogCClassData.parentMtab
#endif

#define VRTabbedDialog_MaxNoMethods 5

/*
 * Instance data
 */
typedef void VRTabbedDialogData;

/*
 * Trace/Debug macro
 */
#ifndef VRTabbedDialogMethodDebug
#define VRTabbedDialogMethodDebug(c,m) SOMMethodDebug(c,m)
#endif

/*
 * Begin stuff that only goes in the primary file
 */
#ifdef VRTabbedDialog_Class_Source

/*
 * Current class macros for Instance and Meta classes.
 */
#undef SOMMeta
#define SOMMeta M_VRTabbedDialogCClassData.parentMtab
#undef SOMInstance
#define SOMInstance VRTabbedDialogCClassData.parentMtab

#ifndef M_VRTabbedDialog_Class_Source
#define M_VRTabbedDialog_Class_Source
#endif    /* M_VRTabbedDialog_Class_Source */

/*
 * Generate the Apply Stubs.
 */
#pragma linkage(somAP_vrSet_TabPosition, system)
static bool   SOMLINK somAP_vrSet_TabPosition(VRTabbedDialog *somSelf,
		somId __id,
		somId __desc,
		va_list __ap)
{
	PSZ str = va_arg(__ap, PSZ);
	__ap; __id; __desc;           /* Referenced to prevent warning msg */

	return (VRTabbedDialog_vrSet_TabPosition(somSelf,str));
}

#pragma linkage(somAP_vrGet_TabPosition, system)
static bool   SOMLINK somAP_vrGet_TabPosition(VRTabbedDialog *somSelf,
		somId __id,
		somId __desc,
		va_list __ap)
{
	PSZ *str = va_arg(__ap, PSZ*);
	__ap; __id; __desc;           /* Referenced to prevent warning msg */

	return (VRTabbedDialog_vrGet_TabPosition(somSelf,str));
}

#pragma linkage(somAP_vrSet_TabDirection, system)
static bool   SOMLINK somAP_vrSet_TabDirection(VRTabbedDialog *somSelf,
		somId __id,
		somId __desc,
		va_list __ap)
{
	PSZ str = va_arg(__ap, PSZ);
	__ap; __id; __desc;           /* Referenced to prevent warning msg */

	return (VRTabbedDialog_vrSet_TabDirection(somSelf,str));
}

#pragma linkage(somAP_vrGet_TabDirection, system)
static bool   SOMLINK somAP_vrGet_TabDirection(VRTabbedDialog *somSelf,
		somId __id,
		somId __desc,
		va_list __ap)
{
	PSZ *str = va_arg(__ap, PSZ*);
	__ap; __id; __desc;           /* Referenced to prevent warning msg */

	return (VRTabbedDialog_vrGet_TabDirection(somSelf,str));
}

#define VRTabbedDialog_WM_stubD 1
#pragma linkage(VRTabbedDialog_WM_stub, system)
SOMEXTERN MRESULT   SOMLINK VRTabbedDialog_WM_stub(VRTabbedDialog *somSelf,
		somId __id,
		somId __desc,
		va_list __ap)
{
	HWND hWnd = va_arg(__ap, HWND);
	ULONG msg = va_arg(__ap, ULONG);
	MPARAM mp1 = va_arg(__ap, MPARAM);
	MPARAM mp2 = va_arg(__ap, MPARAM);
	__ap; __id; __desc;           /* Referenced to prevent warning msg */

	return ((somTD_VRTabbedDialog_vrWM_BUTTON1DOWN) _somFindSMethodOk
		(SOM_GetClass(somSelf), __id))
			(somSelf,hWnd,msg,mp1,mp2);
}


/*
 * Generate dummy external for those stubs that are not declared in this file.
 */

/*
 * Overridden method: somInit
 */
#pragma linkage(VRTabbedDialogInstance_somInit, system)
SOM_Scope void   SOMLINK VRTabbedDialogInstance_somInit(VRTabbedDialog *somSelf);
#ifndef parent_somInit
static char *somMN_somInit = "somInit";
static somId somId_somInit = &somMN_somInit;
#define parent_somInit(somSelf) \
	((SOM_ParentResolveE(SOMObject, SOM_CurrentClass, somInit)) \
	 (somSelf))
#endif
#define VRTabbedDialogParent_somInit parent_somInit

/*
 * Overridden method: somUninit
 */
#pragma linkage(VRTabbedDialogInstance_somUninit, system)
SOM_Scope void   SOMLINK VRTabbedDialogInstance_somUninit(VRTabbedDialog *somSelf);
#ifndef parent_somUninit
static char *somMN_somUninit = "somUninit";
static somId somId_somUninit = &somMN_somUninit;
#define parent_somUninit(somSelf) \
	((SOM_ParentResolveE(SOMObject, SOM_CurrentClass, somUninit)) \
	 (somSelf))
#endif
#define VRTabbedDialogParent_somUninit parent_somUninit

/*
 * Overridden method: vrLocalCreateWindow
 */
#pragma linkage(VRTabbedDialogInstance_vrLocalCreateWindow, system)
SOM_Scope HWND   SOMLINK VRTabbedDialogInstance_vrLocalCreateWindow(VRTabbedDialog *somSelf,
		PBOOL visible);
#ifndef parent_vrLocalCreateWindow
static char *somMN_vrLocalCreateWindow = "vrLocalCreateWindow";
static somId somId_vrLocalCreateWindow = &somMN_vrLocalCreateWindow;
#define parent_vrLocalCreateWindow(somSelf,visible) \
	((SOM_ParentResolveE(VRCore, SOM_CurrentClass, vrLocalCreateWindow)) \
	 (somSelf,visible))
#endif
#define VRTabbedDialogParent_vrLocalCreateWindow parent_vrLocalCreateWindow

/*
 * Overridden method: vrWM_CONTEXTMENU
 */
#pragma linkage(VRTabbedDialogInstance_vrWM_CONTEXTMENU, system)
SOM_Scope MRESULT   SOMLINK VRTabbedDialogInstance_vrWM_CONTEXTMENU(VRTabbedDialog *somSelf,
		HWND hWnd,
		ULONG msg,
		MPARAM mp1,
		MPARAM mp2);
#ifndef parent_vrWM_CONTEXTMENU
static char *somMN_vrWM_CONTEXTMENU = "vrWM_CONTEXTMENU";
static somId somId_vrWM_CONTEXTMENU = &somMN_vrWM_CONTEXTMENU;
#define parent_vrWM_CONTEXTMENU(somSelf,hWnd,msg,mp1,mp2) \
	((SOM_ParentResolveE(VRVisible, SOM_CurrentClass, vrWM_CONTEXTMENU)) \
	 (somSelf,hWnd,msg,mp1,mp2))
#endif
#define VRTabbedDialogParent_vrWM_CONTEXTMENU parent_vrWM_CONTEXTMENU

/*
 * Overridden method: vrWM_COMMAND
 */
#pragma linkage(VRTabbedDialogInstance_vrWM_COMMAND, system)
SOM_Scope MRESULT   SOMLINK VRTabbedDialogInstance_vrWM_COMMAND(VRTabbedDialog *somSelf,
		HWND hWnd,
		ULONG msg,
		MPARAM mp1,
		MPARAM mp2);
#ifndef parent_vrWM_COMMAND
static char *somMN_vrWM_COMMAND = "vrWM_COMMAND";
static somId somId_vrWM_COMMAND = &somMN_vrWM_COMMAND;
#define parent_vrWM_COMMAND(somSelf,hWnd,msg,mp1,mp2) \
	((SOM_ParentResolveE(VRManager, SOM_CurrentClass, vrWM_COMMAND)) \
	 (somSelf,hWnd,msg,mp1,mp2))
#endif
#define VRTabbedDialogParent_vrWM_COMMAND parent_vrWM_COMMAND

/*
 * Overridden method: vrWM_CHAR
 */
#pragma linkage(VRTabbedDialogInstance_vrWM_CHAR, system)
SOM_Scope MRESULT   SOMLINK VRTabbedDialogInstance_vrWM_CHAR(VRTabbedDialog *somSelf,
		HWND hWnd,
		ULONG msg,
		MPARAM mp1,
		MPARAM mp2);
#ifndef parent_vrWM_CHAR
static char *somMN_vrWM_CHAR = "vrWM_CHAR";
static somId somId_vrWM_CHAR = &somMN_vrWM_CHAR;
#define parent_vrWM_CHAR(somSelf,hWnd,msg,mp1,mp2) \
	((SOM_ParentResolveE(VRVisible, SOM_CurrentClass, vrWM_CHAR)) \
	 (somSelf,hWnd,msg,mp1,mp2))
#endif
#define VRTabbedDialogParent_vrWM_CHAR parent_vrWM_CHAR

/*
 * Temporary class data structure used only in class creation
 */
static somClassDataStructure VRTabbedDialogtempClassData;

/*
 * Initialize the class data structure
 */
struct VRTabbedDialogClassDataStructure VRTabbedDialogClassData = {(SOMAny *) NULL};

/*
 * Define the C class data structure
 */
struct VRTabbedDialogCClassDataStructure VRTabbedDialogCClassData = {(somMethodTab *) NULL};

/*
 * New Method: vrSet_TabPosition
 */
#pragma linkage(VRTabbedDialogInstance_vrSet_TabPosition, system)
SOM_Scope bool   SOMLINK VRTabbedDialogInstance_vrSet_TabPosition(VRTabbedDialog *somSelf,
		PSZ str);
static char *somMN_vrSet_TabPosition = "vrSet_TabPosition";
static somId somId_vrSet_TabPosition = &somMN_vrSet_TabPosition;
static char *somDS_vrSet_TabPosition = somMD_VRTabbedDialog_vrSet_TabPosition;
static somId somDI_vrSet_TabPosition = &somDS_vrSet_TabPosition;
#pragma linkage(somRD_vrSet_TabPosition, system)
static bool   SOMLINK somRD_vrSet_TabPosition(VRTabbedDialog *somSelf,
		PSZ str)
{
	return ((bool) va_somDispatchL(somSelf, somId_vrSet_TabPosition,
		_somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrSet_TabPosition),str));
}

/*
 * New Method: vrGet_TabPosition
 */
#pragma linkage(VRTabbedDialogInstance_vrGet_TabPosition, system)
SOM_Scope bool   SOMLINK VRTabbedDialogInstance_vrGet_TabPosition(VRTabbedDialog *somSelf,
		PSZ *str);
static char *somMN_vrGet_TabPosition = "vrGet_TabPosition";
static somId somId_vrGet_TabPosition = &somMN_vrGet_TabPosition;
static char *somDS_vrGet_TabPosition = somMD_VRTabbedDialog_vrGet_TabPosition;
static somId somDI_vrGet_TabPosition = &somDS_vrGet_TabPosition;
#pragma linkage(somRD_vrGet_TabPosition, system)
static bool   SOMLINK somRD_vrGet_TabPosition(VRTabbedDialog *somSelf,
		PSZ *str)
{
	return ((bool) va_somDispatchL(somSelf, somId_vrGet_TabPosition,
		_somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrGet_TabPosition),str));
}

/*
 * New Method: vrSet_TabDirection
 */
#pragma linkage(VRTabbedDialogInstance_vrSet_TabDirection, system)
SOM_Scope bool   SOMLINK VRTabbedDialogInstance_vrSet_TabDirection(VRTabbedDialog *somSelf,
		PSZ str);
static char *somMN_vrSet_TabDirection = "vrSet_TabDirection";
static somId somId_vrSet_TabDirection = &somMN_vrSet_TabDirection;
static char *somDS_vrSet_TabDirection = somMD_VRTabbedDialog_vrSet_TabDirection;
static somId somDI_vrSet_TabDirection = &somDS_vrSet_TabDirection;
#pragma linkage(somRD_vrSet_TabDirection, system)
static bool   SOMLINK somRD_vrSet_TabDirection(VRTabbedDialog *somSelf,
		PSZ str)
{
	return ((bool) va_somDispatchL(somSelf, somId_vrSet_TabDirection,
		_somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrSet_TabDirection),str));
}

/*
 * New Method: vrGet_TabDirection
 */
#pragma linkage(VRTabbedDialogInstance_vrGet_TabDirection, system)
SOM_Scope bool   SOMLINK VRTabbedDialogInstance_vrGet_TabDirection(VRTabbedDialog *somSelf,
		PSZ *str);
static char *somMN_vrGet_TabDirection = "vrGet_TabDirection";
static somId somId_vrGet_TabDirection = &somMN_vrGet_TabDirection;
static char *somDS_vrGet_TabDirection = somMD_VRTabbedDialog_vrGet_TabDirection;
static somId somDI_vrGet_TabDirection = &somDS_vrGet_TabDirection;
#pragma linkage(somRD_vrGet_TabDirection, system)
static bool   SOMLINK somRD_vrGet_TabDirection(VRTabbedDialog *somSelf,
		PSZ *str)
{
	return ((bool) va_somDispatchL(somSelf, somId_vrGet_TabDirection,
		_somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrGet_TabDirection),str));
}

/*
 * New Method: vrWM_BUTTON1DOWN
 */
#pragma linkage(VRTabbedDialogInstance_vrWM_BUTTON1DOWN, system)
SOM_Scope MRESULT   SOMLINK VRTabbedDialogInstance_vrWM_BUTTON1DOWN(VRTabbedDialog *somSelf,
		HWND hWnd,
		ULONG msg,
		MPARAM mp1,
		MPARAM mp2);
static char *somMN_vrWM_BUTTON1DOWN = "vrWM_BUTTON1DOWN";
static somId somId_vrWM_BUTTON1DOWN = &somMN_vrWM_BUTTON1DOWN;
static char *somDS_vrWM_BUTTON1DOWN = somMD_VRTabbedDialog_vrWM_BUTTON1DOWN;
static somId somDI_vrWM_BUTTON1DOWN = &somDS_vrWM_BUTTON1DOWN;
#pragma linkage(somRD_vrWM_BUTTON1DOWN, system)
static MRESULT   SOMLINK somRD_vrWM_BUTTON1DOWN(VRTabbedDialog *somSelf,
		HWND hWnd,
		ULONG msg,
		MPARAM mp1,
		MPARAM mp2)
{
	return ((MRESULT) va_somDispatchL(somSelf, somId_vrWM_BUTTON1DOWN,
		_somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrWM_BUTTON1DOWN),hWnd,msg,mp1,mp2));
}

/*
 * Routines to create the class object
 */

/*
 * Declare the Static Methods table.
 */
static somStaticMethod_t VRTabbedDialogSM[] = {
    {    &VRTabbedDialogClassData.vrSet_TabPosition,
         &somId_vrSet_TabPosition,
         &somDI_vrSet_TabPosition,
         (somMethodProc *) VRTabbedDialogInstance_vrSet_TabPosition,
         (somMethodProc *) somRD_vrSet_TabPosition,
         (somMethodProc *) somAP_vrSet_TabPosition    },
    {    &VRTabbedDialogClassData.vrGet_TabPosition,
         &somId_vrGet_TabPosition,
         &somDI_vrGet_TabPosition,
         (somMethodProc *) VRTabbedDialogInstance_vrGet_TabPosition,
         (somMethodProc *) somRD_vrGet_TabPosition,
         (somMethodProc *) somAP_vrGet_TabPosition    },
    {    &VRTabbedDialogClassData.vrSet_TabDirection,
         &somId_vrSet_TabDirection,
         &somDI_vrSet_TabDirection,
         (somMethodProc *) VRTabbedDialogInstance_vrSet_TabDirection,
         (somMethodProc *) somRD_vrSet_TabDirection,
         (somMethodProc *) somAP_vrSet_TabDirection    },
    {    &VRTabbedDialogClassData.vrGet_TabDirection,
         &somId_vrGet_TabDirection,
         &somDI_vrGet_TabDirection,
         (somMethodProc *) VRTabbedDialogInstance_vrGet_TabDirection,
         (somMethodProc *) somRD_vrGet_TabDirection,
         (somMethodProc *) somAP_vrGet_TabDirection    },
    {    &VRTabbedDialogClassData.vrWM_BUTTON1DOWN,
         &somId_vrWM_BUTTON1DOWN,
         &somDI_vrWM_BUTTON1DOWN,
         (somMethodProc *) VRTabbedDialogInstance_vrWM_BUTTON1DOWN,
         (somMethodProc *) somRD_vrWM_BUTTON1DOWN,
         (somMethodProc *) VRTabbedDialog_WM_stub    },
};


/*
 * Declare the Override Methods table.
 */
static somOverrideMethod_t VRTabbedDialogOM[] = {
    {    &somId_somInit,
         (somMethodProc *) VRTabbedDialogInstance_somInit    },
    {    &somId_somUninit,
         (somMethodProc *) VRTabbedDialogInstance_somUninit    },
    {    &somId_vrLocalCreateWindow,
         (somMethodProc *) VRTabbedDialogInstance_vrLocalCreateWindow    },
    {    &somId_vrWM_CONTEXTMENU,
         (somMethodProc *) VRTabbedDialogInstance_vrWM_CONTEXTMENU    },
    {    &somId_vrWM_COMMAND,
         (somMethodProc *) VRTabbedDialogInstance_vrWM_COMMAND    },
    {    &somId_vrWM_CHAR,
         (somMethodProc *) VRTabbedDialogInstance_vrWM_CHAR    },
};

static void VRTabbedDialogsomInitializeClass ()
{
	int i;
	somStaticMethod_t *smp;
	somOverrideMethod_t *omp;

/*
 * Add the Static Methods.
 */
	for (smp = VRTabbedDialogSM, i = 0; i < 5; smp++, i++)
	    *(smp->classData) =
	        _somAddStaticMethod (VRTabbedDialogtempClassData.classObject,
	            *(smp->methodId), *(smp->methodDescriptor),
	            smp->method, smp->redispatchStub,
	            smp->applyStub);


/*
 * Override methods.
 */
	for (omp = VRTabbedDialogOM, i = 0; i < 6; omp++, i++)
	    _somOverrideSMethod (VRTabbedDialogtempClassData.classObject,
	        *(omp->methodId), omp->method);

}

#pragma linkage(VRTabbedDialogsomCreateClass, system)
static void SOMLINK VRTabbedDialogsomCreateClass(SOMClass *pClsObj,
                           SOMClass *mClsObj)
{
    VRTabbedDialogtempClassData.classObject = _somNew (mClsObj);
    _somInitClass (VRTabbedDialogtempClassData.classObject,
		"VRTabbedDialog",
		pClsObj,
		0,
		VRTabbedDialog_MaxNoMethods,
		VRTabbedDialog_MajorVersion,
		VRTabbedDialog_MinorVersion);
    VRTabbedDialogCClassData.instanceDataToken = 
	_somGetInstanceToken(VRTabbedDialogtempClassData.classObject);
    VRTabbedDialogsomInitializeClass();
    VRTabbedDialogCClassData.parentMtab =
	_somGetPClsMtab(VRTabbedDialogtempClassData.classObject);
    _somSetClassData(VRTabbedDialogtempClassData.classObject, (somClassDataStructure *)&VRTabbedDialogClassData);
    _somClassReady(VRTabbedDialogtempClassData.classObject);
    /* make newly created class object visible */
    VRTabbedDialogClassData.classObject = VRTabbedDialogtempClassData.classObject;
}

VRTabbedDialog * SOMLINK VRTabbedDialogNewClass (integer4 scemajorVersion,
		integer4 sceminorVersion)
{
    SOMClass *pClsObj;
    SOMClass *mClsObj;

    /* Check the version numbers */
    if (((scemajorVersion != 0) && 
         (scemajorVersion != VRTabbedDialog_MajorVersion)) ||
        ((sceminorVersion != 0) && 
         (sceminorVersion > VRTabbedDialog_MinorVersion))) {
	somPrintf("VRTabbedDialogNewClass: Error, bad version numbers.\n");
	SOM_Error(SOMERROR_BadVersion);
    }
    /* Don't do anything if class object is already created. */
    if (VRTabbedDialogClassData.classObject != (SOMAny *) NULL)
	return(VRTabbedDialogClassData.classObject);

    /* Make sure the environment is initialized. */
    if (SOMClassMgrObject == (SOMAny *) NULL) somEnvironmentNew();
    if (SOMClassMgrObject == (SOMAny *) NULL)
	SOM_Error(SOMERROR_CouldNotStartup);

    /* Get the parent class object. */
    VRNotebookNewClass(1,1);	/* static reference */
    pClsObj = _somFindClass(SOMClassMgrObject,
		SOM_IdFromString("VRNotebook"), 1, 1);
    if (pClsObj == (SOMClass *) NULL)
	SOM_Error(SOMERROR_NoParentClass);

    /* Explicit metaclass, so get it */ 
    M_VRTabbedDialogNewClass(0,0);	/* static reference */
    mClsObj = _somFindClass(SOMClassMgrObject,
		SOM_IdFromString("M_VRTabbedDialog"), 0, 0);
    if (mClsObj == (SOMClass *) NULL)
	SOM_Error(SOMERROR_NoMetaClass);

    somConstructClass(VRTabbedDialogsomCreateClass, pClsObj, mClsObj,
		     &VRTabbedDialogtempClassData);
    return (VRTabbedDialogClassData.classObject);
}

#endif                   /* VRTabbedDialog_Class_Source */

#endif       /* tabdlg_ih */

/*
 * This file was generated by the SOM Compiler.
 * FileName: tabdlg.ih.
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emitih: 1.59
 */

#ifndef tabdlg_mih
#define tabdlg_mih


/*
 * Set the scope of methods functions
 */
#ifndef SOM_Scope
#ifdef __cplusplus
#define SOM_Scope extern "C"
#else
#define SOM_Scope extern
#endif
#endif

#ifndef SOM_CurrentClass
#define SOM_CurrentClass M_VRTabbedDialogCClassData.parentMtab
#endif

#define M_VRTabbedDialog_MaxNoMethods 1

/*
 * Instance data
 */
typedef void M_VRTabbedDialogData;

/*
 * Trace/Debug macro
 */
#ifndef M_VRTabbedDialogMethodDebug
#define M_VRTabbedDialogMethodDebug(c,m) SOMMethodDebug(c,m)
#endif

/*
 * Begin stuff that only goes in the primary file
 */
#ifdef M_VRTabbedDialog_Class_Source

/*
 * Current class macros for Instance and Meta classes.
 */

/*
 * Generate the Apply Stubs.
 */
#pragma linkage(somAP_vrShowHelp, system)
static bool   SOMLINK somAP_vrShowHelp(M_VRTabbedDialog *somSelf,
		somId __id,
		somId __desc,
		va_list __ap)
{
	HWND root_frame = va_arg(__ap, HWND);
	__ap; __id; __desc;           /* Referenced to prevent warning msg */

	return (M_VRTabbedDialog_vrShowHelp(somSelf,root_frame));
}


/*
 * Overridden method: vrLocalClassInit
 */
#pragma linkage(VRTabbedDialogClass_vrLocalClassInit, system)
SOM_Scope bool   SOMLINK VRTabbedDialogClass_vrLocalClassInit(M_VRTabbedDialog *somSelf);
#ifndef parent_vrLocalClassInit
static char *somMN_vrLocalClassInit = "vrLocalClassInit";
static somId somId_vrLocalClassInit = &somMN_vrLocalClassInit;
#define parent_vrLocalClassInit(somSelf) \
	((SOM_ParentResolveE(M_VRCore, SOM_CurrentClass, vrLocalClassInit)) \
	 (somSelf))
#endif
#define M_VRTabbedDialogParent_vrLocalClassInit parent_vrLocalClassInit

/*
 * Overridden method: vrLocalWindowClassInit
 */
#pragma linkage(VRTabbedDialogClass_vrLocalWindowClassInit, system)
SOM_Scope bool   SOMLINK VRTabbedDialogClass_vrLocalWindowClassInit(M_VRTabbedDialog *somSelf);
#ifndef parent_vrLocalWindowClassInit
static char *somMN_vrLocalWindowClassInit = "vrLocalWindowClassInit";
static somId somId_vrLocalWindowClassInit = &somMN_vrLocalWindowClassInit;
#define parent_vrLocalWindowClassInit(somSelf) \
	((SOM_ParentResolveE(M_VRCore, SOM_CurrentClass, vrLocalWindowClassInit)) \
	 (somSelf))
#endif
#define M_VRTabbedDialogParent_vrLocalWindowClassInit parent_vrLocalWindowClassInit

/*
 * Overridden method: somInit
 */
#pragma linkage(VRTabbedDialogClass_somInit, system)
SOM_Scope void   SOMLINK VRTabbedDialogClass_somInit(M_VRTabbedDialog *somSelf);
#ifndef parent_somInit
static char *somMN_somInit = "somInit";
static somId somId_somInit = &somMN_somInit;
#define parent_somInit(somSelf) \
	((SOM_ParentResolveE(SOMObject, SOM_CurrentClass, somInit)) \
	 (somSelf))
#endif
#define M_VRTabbedDialogParent_somInit parent_somInit

/*
 * Overridden method: somUninit
 */
#pragma linkage(VRTabbedDialogClass_somUninit, system)
SOM_Scope void   SOMLINK VRTabbedDialogClass_somUninit(M_VRTabbedDialog *somSelf);
#ifndef parent_somUninit
static char *somMN_somUninit = "somUninit";
static somId somId_somUninit = &somMN_somUninit;
#define parent_somUninit(somSelf) \
	((SOM_ParentResolveE(SOMObject, SOM_CurrentClass, somUninit)) \
	 (somSelf))
#endif
#define M_VRTabbedDialogParent_somUninit parent_somUninit

/*
 * Temporary class data structure used only in class creation
 */
static somClassDataStructure M_VRTabbedDialogtempClassData;

/*
 * Initialize the class data structure
 */
struct M_VRTabbedDialogClassDataStructure M_VRTabbedDialogClassData = {(SOMAny *) NULL};

/*
 * Define the C class data structure
 */
struct M_VRTabbedDialogCClassDataStructure M_VRTabbedDialogCClassData = {(somMethodTab *) NULL};

/*
 * New Method: vrShowHelp
 */
#pragma linkage(VRTabbedDialogClass_vrShowHelp, system)
SOM_Scope bool   SOMLINK VRTabbedDialogClass_vrShowHelp(M_VRTabbedDialog *somSelf,
		HWND root_frame);
static char *somMN_vrShowHelp = "vrShowHelp";
static somId somId_vrShowHelp = &somMN_vrShowHelp;
static char *somDS_vrShowHelp = somMD_M_VRTabbedDialog_vrShowHelp;
static somId somDI_vrShowHelp = &somDS_vrShowHelp;
#pragma linkage(somRD_vrShowHelp, system)
static bool   SOMLINK somRD_vrShowHelp(M_VRTabbedDialog *somSelf,
		HWND root_frame)
{
	return ((bool) va_somDispatchL(somSelf, somId_vrShowHelp,
		_somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrShowHelp),root_frame));
}

/*
 * Routines to create the class object
 */

/*
 * Declare the Static Methods table.
 */
static somStaticMethod_t M_VRTabbedDialogSM[] = {
    {    &M_VRTabbedDialogClassData.vrShowHelp,
         &somId_vrShowHelp,
         &somDI_vrShowHelp,
         (somMethodProc *) VRTabbedDialogClass_vrShowHelp,
         (somMethodProc *) somRD_vrShowHelp,
         (somMethodProc *) somAP_vrShowHelp    },
};


/*
 * Declare the Override Methods table.
 */
static somOverrideMethod_t M_VRTabbedDialogOM[] = {
    {    &somId_vrLocalClassInit,
         (somMethodProc *) VRTabbedDialogClass_vrLocalClassInit    },
    {    &somId_vrLocalWindowClassInit,
         (somMethodProc *) VRTabbedDialogClass_vrLocalWindowClassInit    },
    {    &somId_somInit,
         (somMethodProc *) VRTabbedDialogClass_somInit    },
    {    &somId_somUninit,
         (somMethodProc *) VRTabbedDialogClass_somUninit    },
};

static void M_VRTabbedDialogsomInitializeClass ()
{
	int i;
	somStaticMethod_t *smp;
	somOverrideMethod_t *omp;

/*
 * Add the Static Methods.
 */
	for (smp = M_VRTabbedDialogSM, i = 0; i < 1; smp++, i++)
	    *(smp->classData) =
	        _somAddStaticMethod (M_VRTabbedDialogtempClassData.classObject,
	            *(smp->methodId), *(smp->methodDescriptor),
	            smp->method, smp->redispatchStub,
	            smp->applyStub);


/*
 * Override methods.
 */
	for (omp = M_VRTabbedDialogOM, i = 0; i < 4; omp++, i++)
	    _somOverrideSMethod (M_VRTabbedDialogtempClassData.classObject,
	        *(omp->methodId), omp->method);

}

#pragma linkage(M_VRTabbedDialogsomCreateClass, system)
static void SOMLINK M_VRTabbedDialogsomCreateClass(SOMClass *pClsObj,
                           SOMClass *mClsObj)
{
    M_VRTabbedDialogtempClassData.classObject = _somNew (mClsObj);
    _somInitClass (M_VRTabbedDialogtempClassData.classObject,
		"M_VRTabbedDialog",
		pClsObj,
		0,
		M_VRTabbedDialog_MaxNoMethods,
		M_VRTabbedDialog_MajorVersion,
		M_VRTabbedDialog_MinorVersion);
    M_VRTabbedDialogCClassData.instanceDataToken = 
	_somGetInstanceToken(M_VRTabbedDialogtempClassData.classObject);
    M_VRTabbedDialogsomInitializeClass();
    M_VRTabbedDialogCClassData.parentMtab =
	_somGetPClsMtab(M_VRTabbedDialogtempClassData.classObject);
    _somSetClassData(M_VRTabbedDialogtempClassData.classObject, (somClassDataStructure *)&M_VRTabbedDialogClassData);
    _somClassReady(M_VRTabbedDialogtempClassData.classObject);
    /* make newly created class object visible */
    M_VRTabbedDialogClassData.classObject = M_VRTabbedDialogtempClassData.classObject;
}

M_VRTabbedDialog * SOMLINK M_VRTabbedDialogNewClass (integer4 scemajorVersion,
		integer4 sceminorVersion)
{
    SOMClass *pClsObj;
    SOMClass *mClsObj;

    /* Check the version numbers */
    if (((scemajorVersion != 0) && 
         (scemajorVersion != M_VRTabbedDialog_MajorVersion)) ||
        ((sceminorVersion != 0) && 
         (sceminorVersion > M_VRTabbedDialog_MinorVersion))) {
	somPrintf("M_VRTabbedDialogNewClass: Error, bad version numbers.\n");
	SOM_Error(SOMERROR_BadVersion);
    }
    /* Don't do anything if class object is already created. */
    if (M_VRTabbedDialogClassData.classObject != (SOMAny *) NULL)
	return(M_VRTabbedDialogClassData.classObject);

    /* Make sure the environment is initialized. */
    if (SOMClassMgrObject == (SOMAny *) NULL) somEnvironmentNew();
    if (SOMClassMgrObject == (SOMAny *) NULL)
	SOM_Error(SOMERROR_CouldNotStartup);

    /* Get the parent class object. */
    M_VRNotebookNewClass(1,1);	/* static reference */
    pClsObj = _somFindClass(SOMClassMgrObject,
		SOM_IdFromString("M_VRNotebook"), 1, 1);
    if (pClsObj == (SOMClass *) NULL)
	SOM_Error(SOMERROR_NoParentClass);

    /* Use parent's metaclass */ 
    mClsObj = SOM_GetClass(pClsObj);

    somConstructClass(M_VRTabbedDialogsomCreateClass, pClsObj, mClsObj,
		     &M_VRTabbedDialogtempClassData);
    return (M_VRTabbedDialogClassData.classObject);
}

#endif                   /* M_VRTabbedDialog_Class_Source */

#endif       /* tabdlg_ih */
