
/*
 * This file was generated by the SOM Compiler.
 * FileName: icobtn.ih.
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emitih: 1.59
 */

#ifndef icobtn_ih
#define icobtn_ih


#include "icobtn.h"

/*
 * Set the scope of methods functions
 */
#ifndef SOM_Scope
#ifdef __cplusplus
#define SOM_Scope extern "C"
#else
#define SOM_Scope extern
#endif
#endif

/*
 * Passthru lines: File: "C.ih", "after"
 */

#include "vxrexx.h"


#ifndef SOM_CurrentClass
#define SOM_CurrentClass VRIconButtonCClassData.parentMtab
#endif

#define VRIconButton_MaxNoMethods 11

/*
 * Instance data
 */
typedef struct {
	PSZ pszText;
	PSZ pszImg;
	BOOL fMini;
	BOOL fResize;
	BOOL fAutosize;
	BOOL fDown;
	BYTE bAlign;
	int iMnPos;
	PVRMEMPICTURE pPic;
} VRIconButtonData;

/*
 * Instance variable access macros
 */
#define _pszText (somThis->pszText)
#define _pszImg (somThis->pszImg)
#define _fMini (somThis->fMini)
#define _fResize (somThis->fResize)
#define _fAutosize (somThis->fAutosize)
#define _fDown (somThis->fDown)
#define _bAlign (somThis->bAlign)
#define _iMnPos (somThis->iMnPos)
#define _pPic (somThis->pPic)

/*
 * Getdata macro
 */
#define VRIconButtonGetData(somSelf) \
    ((VRIconButtonData *) \
        SOM_DataResolve(somSelf, VRIconButtonCClassData.instanceDataToken))

/*
 * Trace/Debug macro
 */
#ifndef VRIconButtonMethodDebug
#define VRIconButtonMethodDebug(c,m) SOMMethodDebug(c,m)
#endif

/*
 * Begin stuff that only goes in the primary file
 */
#ifdef VRIconButton_Class_Source

/*
 * Current class macros for Instance and Meta classes.
 */
#undef SOMMeta
#define SOMMeta M_VRIconButtonCClassData.parentMtab
#undef SOMInstance
#define SOMInstance VRIconButtonCClassData.parentMtab

#ifndef M_VRIconButton_Class_Source
#define M_VRIconButton_Class_Source
#endif    /* M_VRIconButton_Class_Source */

/*
 * Generate the Apply Stubs.
 */
#pragma linkage(somAP_vrSet_PicturePath, system)
static bool   SOMLINK somAP_vrSet_PicturePath(VRIconButton *somSelf,
		somId __id,
		somId __desc,
		va_list __ap)
{
	PSZ str = va_arg(__ap, PSZ);
	__ap; __id; __desc;           /* Referenced to prevent warning msg */

	return (VRIconButton_vrSet_PicturePath(somSelf,str));
}

#pragma linkage(somAP_vrGet_PicturePath, system)
static bool   SOMLINK somAP_vrGet_PicturePath(VRIconButton *somSelf,
		somId __id,
		somId __desc,
		va_list __ap)
{
	PSZ *str = va_arg(__ap, PSZ*);
	__ap; __id; __desc;           /* Referenced to prevent warning msg */

	return (VRIconButton_vrGet_PicturePath(somSelf,str));
}

#pragma linkage(somAP_vrSet_ResizePicture, system)
static bool   SOMLINK somAP_vrSet_ResizePicture(VRIconButton *somSelf,
		somId __id,
		somId __desc,
		va_list __ap)
{
	BOOL on = va_arg(__ap, BOOL);
	__ap; __id; __desc;           /* Referenced to prevent warning msg */

	return (VRIconButton_vrSet_ResizePicture(somSelf,on));
}

#pragma linkage(somAP_vrGet_ResizePicture, system)
static bool   SOMLINK somAP_vrGet_ResizePicture(VRIconButton *somSelf,
		somId __id,
		somId __desc,
		va_list __ap)
{
	BOOL *on = va_arg(__ap, BOOL*);
	__ap; __id; __desc;           /* Referenced to prevent warning msg */

	return (VRIconButton_vrGet_ResizePicture(somSelf,on));
}

#pragma linkage(somAP_vrSet_TextPosition, system)
static bool   SOMLINK somAP_vrSet_TextPosition(VRIconButton *somSelf,
		somId __id,
		somId __desc,
		va_list __ap)
{
	PSZ str = va_arg(__ap, PSZ);
	__ap; __id; __desc;           /* Referenced to prevent warning msg */

	return (VRIconButton_vrSet_TextPosition(somSelf,str));
}

#pragma linkage(somAP_vrGet_TextPosition, system)
static bool   SOMLINK somAP_vrGet_TextPosition(VRIconButton *somSelf,
		somId __id,
		somId __desc,
		va_list __ap)
{
	PSZ *str = va_arg(__ap, PSZ*);
	__ap; __id; __desc;           /* Referenced to prevent warning msg */

	return (VRIconButton_vrGet_TextPosition(somSelf,str));
}

#pragma linkage(somAP_vrSet_Pushed, system)
static bool   SOMLINK somAP_vrSet_Pushed(VRIconButton *somSelf,
		somId __id,
		somId __desc,
		va_list __ap)
{
	BOOL on = va_arg(__ap, BOOL);
	__ap; __id; __desc;           /* Referenced to prevent warning msg */

	return (VRIconButton_vrSet_Pushed(somSelf,on));
}

#pragma linkage(somAP_vrGet_Pushed, system)
static bool   SOMLINK somAP_vrGet_Pushed(VRIconButton *somSelf,
		somId __id,
		somId __desc,
		va_list __ap)
{
	BOOL *on = va_arg(__ap, BOOL*);
	__ap; __id; __desc;           /* Referenced to prevent warning msg */

	return (VRIconButton_vrGet_Pushed(somSelf,on));
}

#define VRIconButton_WM_stubD 1
#pragma linkage(VRIconButton_WM_stub, system)
SOMEXTERN MRESULT   SOMLINK VRIconButton_WM_stub(VRIconButton *somSelf,
		somId __id,
		somId __desc,
		va_list __ap)
{
	HWND hWnd = va_arg(__ap, HWND);
	ULONG msg = va_arg(__ap, ULONG);
	MPARAM mp1 = va_arg(__ap, MPARAM);
	MPARAM mp2 = va_arg(__ap, MPARAM);
	__ap; __id; __desc;           /* Referenced to prevent warning msg */

	return ((somTD_VRIconButton_vrWM_CONTROL) _somFindSMethodOk
		(SOM_GetClass(somSelf), __id))
			(somSelf,hWnd,msg,mp1,mp2);
}

/* Using "VRIconButton_WM_stub" apply stub for method "vrWM_PAINT" */

/* Using "VRIconButton_WM_stub" apply stub for method "vrWM_MATCHMNEMONIC" */


/*
 * Generate dummy external for those stubs that are not declared in this file.
 */

/*
 * Overridden method: somInit
 */
#pragma linkage(VRIconButtonInstance_somInit, system)
SOM_Scope void   SOMLINK VRIconButtonInstance_somInit(VRIconButton *somSelf);
#ifndef parent_somInit
static char *somMN_somInit = "somInit";
static somId somId_somInit = &somMN_somInit;
#define parent_somInit(somSelf) \
	((SOM_ParentResolveE(SOMObject, SOM_CurrentClass, somInit)) \
	 (somSelf))
#endif
#define VRIconButtonParent_somInit parent_somInit

/*
 * Overridden method: somUninit
 */
#pragma linkage(VRIconButtonInstance_somUninit, system)
SOM_Scope void   SOMLINK VRIconButtonInstance_somUninit(VRIconButton *somSelf);
#ifndef parent_somUninit
static char *somMN_somUninit = "somUninit";
static somId somId_somUninit = &somMN_somUninit;
#define parent_somUninit(somSelf) \
	((SOM_ParentResolveE(SOMObject, SOM_CurrentClass, somUninit)) \
	 (somSelf))
#endif
#define VRIconButtonParent_somUninit parent_somUninit

/*
 * Overridden method: vrLocalCreateWindow
 */
#pragma linkage(VRIconButtonInstance_vrLocalCreateWindow, system)
SOM_Scope HWND   SOMLINK VRIconButtonInstance_vrLocalCreateWindow(VRIconButton *somSelf,
		PBOOL visible);
#ifndef parent_vrLocalCreateWindow
static char *somMN_vrLocalCreateWindow = "vrLocalCreateWindow";
static somId somId_vrLocalCreateWindow = &somMN_vrLocalCreateWindow;
#define parent_vrLocalCreateWindow(somSelf,visible) \
	((SOM_ParentResolveE(VRCore, SOM_CurrentClass, vrLocalCreateWindow)) \
	 (somSelf,visible))
#endif
#define VRIconButtonParent_vrLocalCreateWindow parent_vrLocalCreateWindow

/*
 * Overridden method: vrSet_Caption
 */
#pragma linkage(VRIconButtonInstance_vrSet_Caption, system)
SOM_Scope bool   SOMLINK VRIconButtonInstance_vrSet_Caption(VRIconButton *somSelf,
		PSZ str);
#ifndef parent_vrSet_Caption
static char *somMN_vrSet_Caption = "vrSet_Caption";
static somId somId_vrSet_Caption = &somMN_vrSet_Caption;
#define parent_vrSet_Caption(somSelf,str) \
	((SOM_ParentResolveE(VRVisible, SOM_CurrentClass, vrSet_Caption)) \
	 (somSelf,str))
#endif
#define VRIconButtonParent_vrSet_Caption parent_vrSet_Caption

/*
 * Overridden method: vrGet_Caption
 */
#pragma linkage(VRIconButtonInstance_vrGet_Caption, system)
SOM_Scope bool   SOMLINK VRIconButtonInstance_vrGet_Caption(VRIconButton *somSelf,
		PSZ *str);
#ifndef parent_vrGet_Caption
static char *somMN_vrGet_Caption = "vrGet_Caption";
static somId somId_vrGet_Caption = &somMN_vrGet_Caption;
#define parent_vrGet_Caption(somSelf,str) \
	((SOM_ParentResolveE(VRVisible, SOM_CurrentClass, vrGet_Caption)) \
	 (somSelf,str))
#endif
#define VRIconButtonParent_vrGet_Caption parent_vrGet_Caption

/*
 * Overridden method: vrSet_Autosize
 */
#pragma linkage(VRIconButtonInstance_vrSet_Autosize, system)
SOM_Scope bool   SOMLINK VRIconButtonInstance_vrSet_Autosize(VRIconButton *somSelf,
		BOOL on);
#ifndef parent_vrSet_Autosize
static char *somMN_vrSet_Autosize = "vrSet_Autosize";
static somId somId_vrSet_Autosize = &somMN_vrSet_Autosize;
#define parent_vrSet_Autosize(somSelf,on) \
	((SOM_ParentResolveE(VRButton, SOM_CurrentClass, vrSet_Autosize)) \
	 (somSelf,on))
#endif
#define VRIconButtonParent_vrSet_Autosize parent_vrSet_Autosize

/*
 * Overridden method: vrGet_Autosize
 */
#pragma linkage(VRIconButtonInstance_vrGet_Autosize, system)
SOM_Scope bool   SOMLINK VRIconButtonInstance_vrGet_Autosize(VRIconButton *somSelf,
		BOOL *on);
#ifndef parent_vrGet_Autosize
static char *somMN_vrGet_Autosize = "vrGet_Autosize";
static somId somId_vrGet_Autosize = &somMN_vrGet_Autosize;
#define parent_vrGet_Autosize(somSelf,on) \
	((SOM_ParentResolveE(VRButton, SOM_CurrentClass, vrGet_Autosize)) \
	 (somSelf,on))
#endif
#define VRIconButtonParent_vrGet_Autosize parent_vrGet_Autosize

/*
 * Temporary class data structure used only in class creation
 */
static somClassDataStructure VRIconButtontempClassData;

/*
 * Initialize the class data structure
 */
struct VRIconButtonClassDataStructure VRIconButtonClassData = {(SOMAny *) NULL};

/*
 * Define the C class data structure
 */
struct VRIconButtonCClassDataStructure VRIconButtonCClassData = {(somMethodTab *) NULL};

/*
 * New Method: vrSet_PicturePath
 */
#pragma linkage(VRIconButtonInstance_vrSet_PicturePath, system)
SOM_Scope bool   SOMLINK VRIconButtonInstance_vrSet_PicturePath(VRIconButton *somSelf,
		PSZ str);
static char *somMN_vrSet_PicturePath = "vrSet_PicturePath";
static somId somId_vrSet_PicturePath = &somMN_vrSet_PicturePath;
static char *somDS_vrSet_PicturePath = somMD_VRIconButton_vrSet_PicturePath;
static somId somDI_vrSet_PicturePath = &somDS_vrSet_PicturePath;
#pragma linkage(somRD_vrSet_PicturePath, system)
static bool   SOMLINK somRD_vrSet_PicturePath(VRIconButton *somSelf,
		PSZ str)
{
	return ((bool) va_somDispatchL(somSelf, somId_vrSet_PicturePath,
		_somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrSet_PicturePath),str));
}

/*
 * New Method: vrGet_PicturePath
 */
#pragma linkage(VRIconButtonInstance_vrGet_PicturePath, system)
SOM_Scope bool   SOMLINK VRIconButtonInstance_vrGet_PicturePath(VRIconButton *somSelf,
		PSZ *str);
static char *somMN_vrGet_PicturePath = "vrGet_PicturePath";
static somId somId_vrGet_PicturePath = &somMN_vrGet_PicturePath;
static char *somDS_vrGet_PicturePath = somMD_VRIconButton_vrGet_PicturePath;
static somId somDI_vrGet_PicturePath = &somDS_vrGet_PicturePath;
#pragma linkage(somRD_vrGet_PicturePath, system)
static bool   SOMLINK somRD_vrGet_PicturePath(VRIconButton *somSelf,
		PSZ *str)
{
	return ((bool) va_somDispatchL(somSelf, somId_vrGet_PicturePath,
		_somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrGet_PicturePath),str));
}

/*
 * New Method: vrSet_ResizePicture
 */
#pragma linkage(VRIconButtonInstance_vrSet_ResizePicture, system)
SOM_Scope bool   SOMLINK VRIconButtonInstance_vrSet_ResizePicture(VRIconButton *somSelf,
		BOOL on);
static char *somMN_vrSet_ResizePicture = "vrSet_ResizePicture";
static somId somId_vrSet_ResizePicture = &somMN_vrSet_ResizePicture;
static char *somDS_vrSet_ResizePicture = somMD_VRIconButton_vrSet_ResizePicture;
static somId somDI_vrSet_ResizePicture = &somDS_vrSet_ResizePicture;
#pragma linkage(somRD_vrSet_ResizePicture, system)
static bool   SOMLINK somRD_vrSet_ResizePicture(VRIconButton *somSelf,
		BOOL on)
{
	return ((bool) va_somDispatchL(somSelf, somId_vrSet_ResizePicture,
		_somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrSet_ResizePicture),on));
}

/*
 * New Method: vrGet_ResizePicture
 */
#pragma linkage(VRIconButtonInstance_vrGet_ResizePicture, system)
SOM_Scope bool   SOMLINK VRIconButtonInstance_vrGet_ResizePicture(VRIconButton *somSelf,
		BOOL *on);
static char *somMN_vrGet_ResizePicture = "vrGet_ResizePicture";
static somId somId_vrGet_ResizePicture = &somMN_vrGet_ResizePicture;
static char *somDS_vrGet_ResizePicture = somMD_VRIconButton_vrGet_ResizePicture;
static somId somDI_vrGet_ResizePicture = &somDS_vrGet_ResizePicture;
#pragma linkage(somRD_vrGet_ResizePicture, system)
static bool   SOMLINK somRD_vrGet_ResizePicture(VRIconButton *somSelf,
		BOOL *on)
{
	return ((bool) va_somDispatchL(somSelf, somId_vrGet_ResizePicture,
		_somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrGet_ResizePicture),on));
}

/*
 * New Method: vrSet_TextPosition
 */
#pragma linkage(VRIconButtonInstance_vrSet_TextPosition, system)
SOM_Scope bool   SOMLINK VRIconButtonInstance_vrSet_TextPosition(VRIconButton *somSelf,
		PSZ str);
static char *somMN_vrSet_TextPosition = "vrSet_TextPosition";
static somId somId_vrSet_TextPosition = &somMN_vrSet_TextPosition;
static char *somDS_vrSet_TextPosition = somMD_VRIconButton_vrSet_TextPosition;
static somId somDI_vrSet_TextPosition = &somDS_vrSet_TextPosition;
#pragma linkage(somRD_vrSet_TextPosition, system)
static bool   SOMLINK somRD_vrSet_TextPosition(VRIconButton *somSelf,
		PSZ str)
{
	return ((bool) va_somDispatchL(somSelf, somId_vrSet_TextPosition,
		_somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrSet_TextPosition),str));
}

/*
 * New Method: vrGet_TextPosition
 */
#pragma linkage(VRIconButtonInstance_vrGet_TextPosition, system)
SOM_Scope bool   SOMLINK VRIconButtonInstance_vrGet_TextPosition(VRIconButton *somSelf,
		PSZ *str);
static char *somMN_vrGet_TextPosition = "vrGet_TextPosition";
static somId somId_vrGet_TextPosition = &somMN_vrGet_TextPosition;
static char *somDS_vrGet_TextPosition = somMD_VRIconButton_vrGet_TextPosition;
static somId somDI_vrGet_TextPosition = &somDS_vrGet_TextPosition;
#pragma linkage(somRD_vrGet_TextPosition, system)
static bool   SOMLINK somRD_vrGet_TextPosition(VRIconButton *somSelf,
		PSZ *str)
{
	return ((bool) va_somDispatchL(somSelf, somId_vrGet_TextPosition,
		_somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrGet_TextPosition),str));
}

/*
 * New Method: vrSet_Pushed
 */
#pragma linkage(VRIconButtonInstance_vrSet_Pushed, system)
SOM_Scope bool   SOMLINK VRIconButtonInstance_vrSet_Pushed(VRIconButton *somSelf,
		BOOL on);
static char *somMN_vrSet_Pushed = "vrSet_Pushed";
static somId somId_vrSet_Pushed = &somMN_vrSet_Pushed;
static char *somDS_vrSet_Pushed = somMD_VRIconButton_vrSet_Pushed;
static somId somDI_vrSet_Pushed = &somDS_vrSet_Pushed;
#pragma linkage(somRD_vrSet_Pushed, system)
static bool   SOMLINK somRD_vrSet_Pushed(VRIconButton *somSelf,
		BOOL on)
{
	return ((bool) va_somDispatchL(somSelf, somId_vrSet_Pushed,
		_somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrSet_Pushed),on));
}

/*
 * New Method: vrGet_Pushed
 */
#pragma linkage(VRIconButtonInstance_vrGet_Pushed, system)
SOM_Scope bool   SOMLINK VRIconButtonInstance_vrGet_Pushed(VRIconButton *somSelf,
		BOOL *on);
static char *somMN_vrGet_Pushed = "vrGet_Pushed";
static somId somId_vrGet_Pushed = &somMN_vrGet_Pushed;
static char *somDS_vrGet_Pushed = somMD_VRIconButton_vrGet_Pushed;
static somId somDI_vrGet_Pushed = &somDS_vrGet_Pushed;
#pragma linkage(somRD_vrGet_Pushed, system)
static bool   SOMLINK somRD_vrGet_Pushed(VRIconButton *somSelf,
		BOOL *on)
{
	return ((bool) va_somDispatchL(somSelf, somId_vrGet_Pushed,
		_somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrGet_Pushed),on));
}

/*
 * New Method: vrWM_CONTROL
 */
#pragma linkage(VRIconButtonInstance_vrWM_CONTROL, system)
SOM_Scope MRESULT   SOMLINK VRIconButtonInstance_vrWM_CONTROL(VRIconButton *somSelf,
		HWND hWnd,
		ULONG msg,
		MPARAM mp1,
		MPARAM mp2);
static char *somMN_vrWM_CONTROL = "vrWM_CONTROL";
static somId somId_vrWM_CONTROL = &somMN_vrWM_CONTROL;
static char *somDS_vrWM_CONTROL = somMD_VRIconButton_vrWM_CONTROL;
static somId somDI_vrWM_CONTROL = &somDS_vrWM_CONTROL;
#pragma linkage(somRD_vrWM_CONTROL, system)
static MRESULT   SOMLINK somRD_vrWM_CONTROL(VRIconButton *somSelf,
		HWND hWnd,
		ULONG msg,
		MPARAM mp1,
		MPARAM mp2)
{
	return ((MRESULT) va_somDispatchL(somSelf, somId_vrWM_CONTROL,
		_somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrWM_CONTROL),hWnd,msg,mp1,mp2));
}

/*
 * New Method: vrWM_PAINT
 */
#pragma linkage(VRIconButtonInstance_vrWM_PAINT, system)
SOM_Scope MRESULT   SOMLINK VRIconButtonInstance_vrWM_PAINT(VRIconButton *somSelf,
		HWND hWnd,
		ULONG msg,
		MPARAM mp1,
		MPARAM mp2);
static char *somMN_vrWM_PAINT = "vrWM_PAINT";
static somId somId_vrWM_PAINT = &somMN_vrWM_PAINT;
static char *somDS_vrWM_PAINT = somMD_VRIconButton_vrWM_PAINT;
static somId somDI_vrWM_PAINT = &somDS_vrWM_PAINT;
#pragma linkage(somRD_vrWM_PAINT, system)
static MRESULT   SOMLINK somRD_vrWM_PAINT(VRIconButton *somSelf,
		HWND hWnd,
		ULONG msg,
		MPARAM mp1,
		MPARAM mp2)
{
	return ((MRESULT) va_somDispatchL(somSelf, somId_vrWM_PAINT,
		_somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrWM_PAINT),hWnd,msg,mp1,mp2));
}

/*
 * New Method: vrWM_MATCHMNEMONIC
 */
#pragma linkage(VRIconButtonInstance_vrWM_MATCHMNEMONIC, system)
SOM_Scope MRESULT   SOMLINK VRIconButtonInstance_vrWM_MATCHMNEMONIC(VRIconButton *somSelf,
		HWND hWnd,
		ULONG msg,
		MPARAM mp1,
		MPARAM mp2);
static char *somMN_vrWM_MATCHMNEMONIC = "vrWM_MATCHMNEMONIC";
static somId somId_vrWM_MATCHMNEMONIC = &somMN_vrWM_MATCHMNEMONIC;
static char *somDS_vrWM_MATCHMNEMONIC = somMD_VRIconButton_vrWM_MATCHMNEMONIC;
static somId somDI_vrWM_MATCHMNEMONIC = &somDS_vrWM_MATCHMNEMONIC;
#pragma linkage(somRD_vrWM_MATCHMNEMONIC, system)
static MRESULT   SOMLINK somRD_vrWM_MATCHMNEMONIC(VRIconButton *somSelf,
		HWND hWnd,
		ULONG msg,
		MPARAM mp1,
		MPARAM mp2)
{
	return ((MRESULT) va_somDispatchL(somSelf, somId_vrWM_MATCHMNEMONIC,
		_somGetMethodDescriptor(SOM_GetClass(somSelf),somId_vrWM_MATCHMNEMONIC),hWnd,msg,mp1,mp2));
}

/*
 * Routines to create the class object
 */

/*
 * Declare the Static Methods table.
 */
static somStaticMethod_t VRIconButtonSM[] = {
    {    &VRIconButtonClassData.vrSet_PicturePath,
         &somId_vrSet_PicturePath,
         &somDI_vrSet_PicturePath,
         (somMethodProc *) VRIconButtonInstance_vrSet_PicturePath,
         (somMethodProc *) somRD_vrSet_PicturePath,
         (somMethodProc *) somAP_vrSet_PicturePath    },
    {    &VRIconButtonClassData.vrGet_PicturePath,
         &somId_vrGet_PicturePath,
         &somDI_vrGet_PicturePath,
         (somMethodProc *) VRIconButtonInstance_vrGet_PicturePath,
         (somMethodProc *) somRD_vrGet_PicturePath,
         (somMethodProc *) somAP_vrGet_PicturePath    },
    {    &VRIconButtonClassData.vrSet_ResizePicture,
         &somId_vrSet_ResizePicture,
         &somDI_vrSet_ResizePicture,
         (somMethodProc *) VRIconButtonInstance_vrSet_ResizePicture,
         (somMethodProc *) somRD_vrSet_ResizePicture,
         (somMethodProc *) somAP_vrSet_ResizePicture    },
    {    &VRIconButtonClassData.vrGet_ResizePicture,
         &somId_vrGet_ResizePicture,
         &somDI_vrGet_ResizePicture,
         (somMethodProc *) VRIconButtonInstance_vrGet_ResizePicture,
         (somMethodProc *) somRD_vrGet_ResizePicture,
         (somMethodProc *) somAP_vrGet_ResizePicture    },
    {    &VRIconButtonClassData.vrSet_TextPosition,
         &somId_vrSet_TextPosition,
         &somDI_vrSet_TextPosition,
         (somMethodProc *) VRIconButtonInstance_vrSet_TextPosition,
         (somMethodProc *) somRD_vrSet_TextPosition,
         (somMethodProc *) somAP_vrSet_TextPosition    },
    {    &VRIconButtonClassData.vrGet_TextPosition,
         &somId_vrGet_TextPosition,
         &somDI_vrGet_TextPosition,
         (somMethodProc *) VRIconButtonInstance_vrGet_TextPosition,
         (somMethodProc *) somRD_vrGet_TextPosition,
         (somMethodProc *) somAP_vrGet_TextPosition    },
    {    &VRIconButtonClassData.vrSet_Pushed,
         &somId_vrSet_Pushed,
         &somDI_vrSet_Pushed,
         (somMethodProc *) VRIconButtonInstance_vrSet_Pushed,
         (somMethodProc *) somRD_vrSet_Pushed,
         (somMethodProc *) somAP_vrSet_Pushed    },
    {    &VRIconButtonClassData.vrGet_Pushed,
         &somId_vrGet_Pushed,
         &somDI_vrGet_Pushed,
         (somMethodProc *) VRIconButtonInstance_vrGet_Pushed,
         (somMethodProc *) somRD_vrGet_Pushed,
         (somMethodProc *) somAP_vrGet_Pushed    },
    {    &VRIconButtonClassData.vrWM_CONTROL,
         &somId_vrWM_CONTROL,
         &somDI_vrWM_CONTROL,
         (somMethodProc *) VRIconButtonInstance_vrWM_CONTROL,
         (somMethodProc *) somRD_vrWM_CONTROL,
         (somMethodProc *) VRIconButton_WM_stub    },
    {    &VRIconButtonClassData.vrWM_PAINT,
         &somId_vrWM_PAINT,
         &somDI_vrWM_PAINT,
         (somMethodProc *) VRIconButtonInstance_vrWM_PAINT,
         (somMethodProc *) somRD_vrWM_PAINT,
         (somMethodProc *) VRIconButton_WM_stub    },
    {    &VRIconButtonClassData.vrWM_MATCHMNEMONIC,
         &somId_vrWM_MATCHMNEMONIC,
         &somDI_vrWM_MATCHMNEMONIC,
         (somMethodProc *) VRIconButtonInstance_vrWM_MATCHMNEMONIC,
         (somMethodProc *) somRD_vrWM_MATCHMNEMONIC,
         (somMethodProc *) VRIconButton_WM_stub    },
};


/*
 * Declare the Override Methods table.
 */
static somOverrideMethod_t VRIconButtonOM[] = {
    {    &somId_somInit,
         (somMethodProc *) VRIconButtonInstance_somInit    },
    {    &somId_somUninit,
         (somMethodProc *) VRIconButtonInstance_somUninit    },
    {    &somId_vrLocalCreateWindow,
         (somMethodProc *) VRIconButtonInstance_vrLocalCreateWindow    },
    {    &somId_vrSet_Caption,
         (somMethodProc *) VRIconButtonInstance_vrSet_Caption    },
    {    &somId_vrGet_Caption,
         (somMethodProc *) VRIconButtonInstance_vrGet_Caption    },
    {    &somId_vrSet_Autosize,
         (somMethodProc *) VRIconButtonInstance_vrSet_Autosize    },
    {    &somId_vrGet_Autosize,
         (somMethodProc *) VRIconButtonInstance_vrGet_Autosize    },
};

static void VRIconButtonsomInitializeClass ()
{
	int i;
	somStaticMethod_t *smp;
	somOverrideMethod_t *omp;

/*
 * Add the Static Methods.
 */
	for (smp = VRIconButtonSM, i = 0; i < 11; smp++, i++)
	    *(smp->classData) =
	        _somAddStaticMethod (VRIconButtontempClassData.classObject,
	            *(smp->methodId), *(smp->methodDescriptor),
	            smp->method, smp->redispatchStub,
	            smp->applyStub);


/*
 * Override methods.
 */
	for (omp = VRIconButtonOM, i = 0; i < 7; omp++, i++)
	    _somOverrideSMethod (VRIconButtontempClassData.classObject,
	        *(omp->methodId), omp->method);

}

#pragma linkage(VRIconButtonsomCreateClass, system)
static void SOMLINK VRIconButtonsomCreateClass(SOMClass *pClsObj,
                           SOMClass *mClsObj)
{
    VRIconButtontempClassData.classObject = _somNew (mClsObj);
    _somInitClass (VRIconButtontempClassData.classObject,
		"VRIconButton",
		pClsObj,
		sizeof(VRIconButtonData),
		VRIconButton_MaxNoMethods,
		VRIconButton_MajorVersion,
		VRIconButton_MinorVersion);
    VRIconButtonCClassData.instanceDataToken = 
	_somGetInstanceToken(VRIconButtontempClassData.classObject);
    VRIconButtonsomInitializeClass();
    VRIconButtonCClassData.parentMtab =
	_somGetPClsMtab(VRIconButtontempClassData.classObject);
    _somSetClassData(VRIconButtontempClassData.classObject, (somClassDataStructure *)&VRIconButtonClassData);
    _somClassReady(VRIconButtontempClassData.classObject);
    /* make newly created class object visible */
    VRIconButtonClassData.classObject = VRIconButtontempClassData.classObject;
}

VRIconButton * SOMLINK VRIconButtonNewClass (integer4 scemajorVersion,
		integer4 sceminorVersion)
{
    SOMClass *pClsObj;
    SOMClass *mClsObj;

    /* Check the version numbers */
    if (((scemajorVersion != 0) && 
         (scemajorVersion != VRIconButton_MajorVersion)) ||
        ((sceminorVersion != 0) && 
         (sceminorVersion > VRIconButton_MinorVersion))) {
	somPrintf("VRIconButtonNewClass: Error, bad version numbers.\n");
	SOM_Error(SOMERROR_BadVersion);
    }
    /* Don't do anything if class object is already created. */
    if (VRIconButtonClassData.classObject != (SOMAny *) NULL)
	return(VRIconButtonClassData.classObject);

    /* Make sure the environment is initialized. */
    if (SOMClassMgrObject == (SOMAny *) NULL) somEnvironmentNew();
    if (SOMClassMgrObject == (SOMAny *) NULL)
	SOM_Error(SOMERROR_CouldNotStartup);

    /* Get the parent class object. */
    VRPushButtonNewClass(1,1);	/* static reference */
    pClsObj = _somFindClass(SOMClassMgrObject,
		SOM_IdFromString("VRPushButton"), 1, 1);
    if (pClsObj == (SOMClass *) NULL)
	SOM_Error(SOMERROR_NoParentClass);

    /* Explicit metaclass, so get it */ 
    M_VRIconButtonNewClass(0,0);	/* static reference */
    mClsObj = _somFindClass(SOMClassMgrObject,
		SOM_IdFromString("M_VRIconButton"), 0, 0);
    if (mClsObj == (SOMClass *) NULL)
	SOM_Error(SOMERROR_NoMetaClass);

    somConstructClass(VRIconButtonsomCreateClass, pClsObj, mClsObj,
		     &VRIconButtontempClassData);
    return (VRIconButtonClassData.classObject);
}

#endif                   /* VRIconButton_Class_Source */

#endif       /* icobtn_ih */

/*
 * This file was generated by the SOM Compiler.
 * FileName: icobtn.ih.
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emitih: 1.59
 */

#ifndef icobtn_mih
#define icobtn_mih


/*
 * Set the scope of methods functions
 */
#ifndef SOM_Scope
#ifdef __cplusplus
#define SOM_Scope extern "C"
#else
#define SOM_Scope extern
#endif
#endif

#ifndef SOM_CurrentClass
#define SOM_CurrentClass M_VRIconButtonCClassData.parentMtab
#endif

#define M_VRIconButton_MaxNoMethods 0

/*
 * Instance data
 */
typedef void M_VRIconButtonData;

/*
 * Trace/Debug macro
 */
#ifndef M_VRIconButtonMethodDebug
#define M_VRIconButtonMethodDebug(c,m) SOMMethodDebug(c,m)
#endif

/*
 * Begin stuff that only goes in the primary file
 */
#ifdef M_VRIconButton_Class_Source

/*
 * Current class macros for Instance and Meta classes.
 */

/*
 * Generate the Apply Stubs.
 */

/*
 * Overridden method: vrLocalClassInit
 */
#pragma linkage(VRIconButtonClass_vrLocalClassInit, system)
SOM_Scope bool   SOMLINK VRIconButtonClass_vrLocalClassInit(M_VRIconButton *somSelf);
#ifndef parent_vrLocalClassInit
static char *somMN_vrLocalClassInit = "vrLocalClassInit";
static somId somId_vrLocalClassInit = &somMN_vrLocalClassInit;
#define parent_vrLocalClassInit(somSelf) \
	((SOM_ParentResolveE(M_VRCore, SOM_CurrentClass, vrLocalClassInit)) \
	 (somSelf))
#endif
#define M_VRIconButtonParent_vrLocalClassInit parent_vrLocalClassInit

/*
 * Overridden method: vrLocalWindowClassInit
 */
#pragma linkage(VRIconButtonClass_vrLocalWindowClassInit, system)
SOM_Scope bool   SOMLINK VRIconButtonClass_vrLocalWindowClassInit(M_VRIconButton *somSelf);
#ifndef parent_vrLocalWindowClassInit
static char *somMN_vrLocalWindowClassInit = "vrLocalWindowClassInit";
static somId somId_vrLocalWindowClassInit = &somMN_vrLocalWindowClassInit;
#define parent_vrLocalWindowClassInit(somSelf) \
	((SOM_ParentResolveE(M_VRCore, SOM_CurrentClass, vrLocalWindowClassInit)) \
	 (somSelf))
#endif
#define M_VRIconButtonParent_vrLocalWindowClassInit parent_vrLocalWindowClassInit

/*
 * Overridden method: somInit
 */
#pragma linkage(VRIconButtonClass_somInit, system)
SOM_Scope void   SOMLINK VRIconButtonClass_somInit(M_VRIconButton *somSelf);
#ifndef parent_somInit
static char *somMN_somInit = "somInit";
static somId somId_somInit = &somMN_somInit;
#define parent_somInit(somSelf) \
	((SOM_ParentResolveE(SOMObject, SOM_CurrentClass, somInit)) \
	 (somSelf))
#endif
#define M_VRIconButtonParent_somInit parent_somInit

/*
 * Overridden method: somUninit
 */
#pragma linkage(VRIconButtonClass_somUninit, system)
SOM_Scope void   SOMLINK VRIconButtonClass_somUninit(M_VRIconButton *somSelf);
#ifndef parent_somUninit
static char *somMN_somUninit = "somUninit";
static somId somId_somUninit = &somMN_somUninit;
#define parent_somUninit(somSelf) \
	((SOM_ParentResolveE(SOMObject, SOM_CurrentClass, somUninit)) \
	 (somSelf))
#endif
#define M_VRIconButtonParent_somUninit parent_somUninit

/*
 * Temporary class data structure used only in class creation
 */
static somClassDataStructure M_VRIconButtontempClassData;

/*
 * Initialize the class data structure
 */
struct M_VRIconButtonClassDataStructure M_VRIconButtonClassData = {(SOMAny *) NULL};

/*
 * Define the C class data structure
 */
struct M_VRIconButtonCClassDataStructure M_VRIconButtonCClassData = {(somMethodTab *) NULL};

/*
 * Routines to create the class object
 */

/*
 * Declare the Override Methods table.
 */
static somOverrideMethod_t M_VRIconButtonOM[] = {
    {    &somId_vrLocalClassInit,
         (somMethodProc *) VRIconButtonClass_vrLocalClassInit    },
    {    &somId_vrLocalWindowClassInit,
         (somMethodProc *) VRIconButtonClass_vrLocalWindowClassInit    },
    {    &somId_somInit,
         (somMethodProc *) VRIconButtonClass_somInit    },
    {    &somId_somUninit,
         (somMethodProc *) VRIconButtonClass_somUninit    },
};

static void M_VRIconButtonsomInitializeClass ()
{
	int i;
	somOverrideMethod_t *omp;

/*
 * Override methods.
 */
	for (omp = M_VRIconButtonOM, i = 0; i < 4; omp++, i++)
	    _somOverrideSMethod (M_VRIconButtontempClassData.classObject,
	        *(omp->methodId), omp->method);

}

#pragma linkage(M_VRIconButtonsomCreateClass, system)
static void SOMLINK M_VRIconButtonsomCreateClass(SOMClass *pClsObj,
                           SOMClass *mClsObj)
{
    M_VRIconButtontempClassData.classObject = _somNew (mClsObj);
    _somInitClass (M_VRIconButtontempClassData.classObject,
		"M_VRIconButton",
		pClsObj,
		0,
		M_VRIconButton_MaxNoMethods,
		M_VRIconButton_MajorVersion,
		M_VRIconButton_MinorVersion);
    M_VRIconButtonCClassData.instanceDataToken = 
	_somGetInstanceToken(M_VRIconButtontempClassData.classObject);
    M_VRIconButtonsomInitializeClass();
    M_VRIconButtonCClassData.parentMtab =
	_somGetPClsMtab(M_VRIconButtontempClassData.classObject);
    _somSetClassData(M_VRIconButtontempClassData.classObject, (somClassDataStructure *)&M_VRIconButtonClassData);
    _somClassReady(M_VRIconButtontempClassData.classObject);
    /* make newly created class object visible */
    M_VRIconButtonClassData.classObject = M_VRIconButtontempClassData.classObject;
}

M_VRIconButton * SOMLINK M_VRIconButtonNewClass (integer4 scemajorVersion,
		integer4 sceminorVersion)
{
    SOMClass *pClsObj;
    SOMClass *mClsObj;

    /* Check the version numbers */
    if (((scemajorVersion != 0) && 
         (scemajorVersion != M_VRIconButton_MajorVersion)) ||
        ((sceminorVersion != 0) && 
         (sceminorVersion > M_VRIconButton_MinorVersion))) {
	somPrintf("M_VRIconButtonNewClass: Error, bad version numbers.\n");
	SOM_Error(SOMERROR_BadVersion);
    }
    /* Don't do anything if class object is already created. */
    if (M_VRIconButtonClassData.classObject != (SOMAny *) NULL)
	return(M_VRIconButtonClassData.classObject);

    /* Make sure the environment is initialized. */
    if (SOMClassMgrObject == (SOMAny *) NULL) somEnvironmentNew();
    if (SOMClassMgrObject == (SOMAny *) NULL)
	SOM_Error(SOMERROR_CouldNotStartup);

    /* Get the parent class object. */
    M_VRPushButtonNewClass(1,1);	/* static reference */
    pClsObj = _somFindClass(SOMClassMgrObject,
		SOM_IdFromString("M_VRPushButton"), 1, 1);
    if (pClsObj == (SOMClass *) NULL)
	SOM_Error(SOMERROR_NoParentClass);

    /* Use parent's metaclass */ 
    mClsObj = SOM_GetClass(pClsObj);

    somConstructClass(M_VRIconButtonsomCreateClass, pClsObj, mClsObj,
		     &M_VRIconButtontempClassData);
    return (M_VRIconButtonClassData.classObject);
}

#endif                   /* M_VRIconButton_Class_Source */

#endif       /* icobtn_ih */
